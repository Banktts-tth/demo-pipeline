name: Deploy to OpenShift

on:
  workflow_dispatch:
  push:
    branches:
      - main  # Adjust this to the branch you want to deploy from

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up OpenShift CLI
      run: |
        curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz
        tar xvzf openshift-client-linux.tar.gz
        sudo mv oc /usr/local/bin

    - name: Set up Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Log in to OpenShift
      env:
        OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
        OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
      run: |
        oc login $OPENSHIFT_SERVER --token=$OPENSHIFT_TOKEN --insecure-skip-tls-verify

    - name: Cleanup Existing Resources
      run: |
        oc delete pod -l app.kubernetes.io/name=demo-pipeline --ignore-not-found
        oc delete deployment demopipeline-demo-pipeline --ignore-not-found
        oc delete service demopipeline-demo-pipeline --ignore-not-found
        oc delete ingress demopipeline-demo-pipeline --ignore-not-found
        oc delete serviceaccount demopipeline-demo-pipeline --ignore-not-found
        oc delete pod demopipeline-demo-pipeline-test-connection --ignore-not-found
        # Delete demopipeline-configserver resources
        oc delete pod -l app.kubernetes.io/name=demopipeline-configserver --ignore-not-found
        oc delete deployment demopipeline-configserver --ignore-not-found
        oc delete service demopipeline-configserver --ignore-not-found
    - name: Apply RBAC Configuration
      run: |
          oc apply -f templates/role.yaml
          oc apply -f templates/rolebinding.yaml

    - name: Generate Kubernetes Manifests with Helm
      run: |
        helm template demopipeline . --set image.repository=docker.io/bankttstth/demo-spring,image.tag=latest > my-release-manifests2.yaml

    - name: Apply Kubernetes Manifests to OpenShift
      run: |
        oc apply -f my-release-manifests2.yaml

    - name: Check Rollout Status
      run: |
        oc rollout status deployment/demopipeline-demo-pipeline